{
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",
    "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
    "extends": [
        ":dependencyDashboard",
        "config:best-practices",
        ":disableRateLimiting",
        ":semanticCommits"
    ],
    "customManagers": [
        {
            "customType": "regex",
            "description": "Process various dependencies in YAML files",
            "managerFilePatterns": [
                "/\\.ya?ml(\\.j2)?$/"
            ],
            "matchStrings": [
                "\\S+: \"?(?<currentValue>[^\"\\s]+)\"? # ?renovate: depName=(?<depName>\\S+)( datasource=(?<datasource>\\S+))?( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?( packageName=(?<packageName>\\S+))?",
                "(?m:^[ \\t]*?# ?renovate: depName=(?<depName>\\S+)( datasource=(?<datasource>\\S+))?( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?( packageName=(?<packageName>\\S+))?\\n[ \\t ]*?\\S+: \"?(?<currentValue>[^\" ]+?)\"?$)"
            ],
            "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
            "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}",
            "packageNameTemplate": "{{#if packageName}}{{{packageName}}}{{else}}{{{depName}}}{{/if}}"
        },
        {
            "customType": "regex",
            "description": "Process GitHub download dependencies in YAML files",
            "managerFilePatterns": [
                "/\\.ya?ml(\\.j2)?$/"
            ],
            "matchStrings": [
                "https:\\/\\/github.com\\/(?<depName>\\S+?\\/\\S+?)\\/releases\\/download\\/(?<currentValue>(v|\\d)\\S+?)\\/\\S+",
                "https:\\/\\/raw.githubusercontent.com\\/(?<depName>\\S+?\\/\\S+?)\\/(?<currentValue>(v|\\d)\\S+?)\\/\\S+"
            ],
            "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
            "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}"
        }
    ],
    "packageRules": [
        {
            "matchUpdateTypes": [
                "major"
            ],
            "labels": [
                "type/major"
            ],
            "semanticCommitType": "feat",
            "commitMessagePrefix": "{{semanticCommitType}}({{semanticCommitScope}})!:",
            "commitMessageExtra": "( {{currentVersion}} â†’ {{newVersion}} )"
        },
        {
            "matchUpdateTypes": [
                "minor"
            ],
            "labels": [
                "type/minor"
            ],
            "semanticCommitType": "feat",
            "commitMessageExtra": "( {{currentVersion}} â†’ {{newVersion}} )"
        },
        {
            "matchUpdateTypes": [
                "patch"
            ],
            "labels": [
                "type/patch"
            ],
            "semanticCommitType": "fix",
            "commitMessageExtra": "( {{currentVersion}} â†’ {{newVersion}} )"
        },
        {
            "matchUpdateTypes": [
                "digest"
            ],
            "labels": [
                "type/digest"
            ],
            "semanticCommitType": "chore",
            "commitMessageExtra": "( {{currentDigestShort}} â†’ {{newDigestShort}} )"
        },
        {
            "matchManagers": [
                "github-actions"
            ],
            "addLabels": [
                "renovate/github-action"
            ],
            "automerge": true,
            "automergeType": "pr",
            "matchUpdateTypes": [
                "minor",
                "patch",
                "digest"
            ],
            "semanticCommitType": "ci",
            "semanticCommitScope": "github-actions",
            "commitMessageTopic": "action {{depName}}"
        },
        {
            "matchDatasources": [
                "github-releases",
                "github-tags"
            ],
            "addLabels": [
                "renovate/github-release"
            ],
            "semanticCommitScope": "github-release",
            "commitMessageTopic": "release {{depName}}"
        },
        {
            "matchDatasources": [
                "terraform-provider"
            ],
            "addLabels": [
                "renovate/terraform-provider"
            ],
            "semanticCommitType": "fix",
            "semanticCommitScope": "terraform"
        }
    ]
}
